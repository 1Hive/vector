{
  "address": "0xaA59dF8Bf2A9eE8fB5aB841aAddf62Ce57Ee245f",
  "abi": [
    {
      "inputs": [],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "definition",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "stateEncoding",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolverEncoding",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "encodedCancel",
              "type": "bytes"
            }
          ],
          "internalType": "struct RegisteredTransfer",
          "name": "transfer",
          "type": "tuple"
        }
      ],
      "name": "addTransferDefinition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "index",
          "type": "uint256"
        }
      ],
      "name": "getTransferDefinitionByIndex",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "definition",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "stateEncoding",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolverEncoding",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "encodedCancel",
              "type": "bytes"
            }
          ],
          "internalType": "struct RegisteredTransfer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "getTransferDefinitionByName",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "definition",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "stateEncoding",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolverEncoding",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "encodedCancel",
              "type": "bytes"
            }
          ],
          "internalType": "struct RegisteredTransfer",
          "name": "",
          "type": "tuple"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "getTransferDefinitions",
      "outputs": [
        {
          "components": [
            {
              "internalType": "string",
              "name": "name",
              "type": "string"
            },
            {
              "internalType": "address",
              "name": "definition",
              "type": "address"
            },
            {
              "internalType": "string",
              "name": "stateEncoding",
              "type": "string"
            },
            {
              "internalType": "string",
              "name": "resolverEncoding",
              "type": "string"
            },
            {
              "internalType": "bytes",
              "name": "encodedCancel",
              "type": "bytes"
            }
          ],
          "internalType": "struct RegisteredTransfer[]",
          "name": "",
          "type": "tuple[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        }
      ],
      "name": "isEmptyString",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "length",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "nameExists",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "name",
          "type": "string"
        }
      ],
      "name": "removeTransferDefinition",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "string",
          "name": "s",
          "type": "string"
        },
        {
          "internalType": "string",
          "name": "t",
          "type": "string"
        }
      ],
      "name": "stringEqual",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    }
  ],
  "transactionHash": "0x990cb52504ded81f6c6f22ebc6d4bc0444384aabba7e1753d450ecbe5803b0a4",
  "receipt": {
    "to": null,
    "from": "0x6E137983f0B260BAD708b4FAef30cba5a74E69AA",
    "contractAddress": "0xaA59dF8Bf2A9eE8fB5aB841aAddf62Ce57Ee245f",
    "transactionIndex": 10,
    "gasUsed": "1124718",
    "logsBloom": "0x
    "blockHash": "0x6b16210b7718d7933c8e30f269b44e39aff836a6568f7f231515200c0fc0f5e9",
    "transactionHash": "0x990cb52504ded81f6c6f22ebc6d4bc0444384aabba7e1753d450ecbe5803b0a4",
    "logs": [],
    "blockNumber": 7757705,
    "cumulativeGasUsed": "4490773",
    "status": 1,
    "byzantium": true
  },
  "args": [],
  "solcInputHash": "e64b9cdf4f72778a3c3a9b0d6a298f3c",
  "metadata": "{\"compiler\":{\"version\":\"0.7.1+commit.f4a555be\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"inputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"definition\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stateEncoding\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolverEncoding\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encodedCancel\",\"type\":\"bytes\"}],\"internalType\":\"struct RegisteredTransfer\",\"name\":\"transfer\",\"type\":\"tuple\"}],\"name\":\"addTransferDefinition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getTransferDefinitionByIndex\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"definition\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stateEncoding\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolverEncoding\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encodedCancel\",\"type\":\"bytes\"}],\"internalType\":\"struct RegisteredTransfer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"getTransferDefinitionByName\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"definition\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stateEncoding\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolverEncoding\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encodedCancel\",\"type\":\"bytes\"}],\"internalType\":\"struct RegisteredTransfer\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getTransferDefinitions\",\"outputs\":[{\"components\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"definition\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"stateEncoding\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"resolverEncoding\",\"type\":\"string\"},{\"internalType\":\"bytes\",\"name\":\"encodedCancel\",\"type\":\"bytes\"}],\"internalType\":\"struct RegisteredTransfer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"}],\"name\":\"isEmptyString\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"length\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"nameExists\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"name\",\"type\":\"string\"}],\"name\":\"removeTransferDefinition\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"string\",\"name\":\"s\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"t\",\"type\":\"string\"}],\"name\":\"stringEqual\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"pure\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layne Haber <layne@connext.network>\",\"kind\":\"dev\",\"methods\":{},\"title\":\"TestLibIterableMapping\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"notice\":\"Used to easily test the internal methods of         LibIterableMapping.sol by aliasing them to public         methods.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src.sol/testing/TestLibIterableMapping.sol\":\"TestLibIterableMapping\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\",\"useLiteralContent\":true},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[]},\"sources\":{\"src.sol/interfaces/ITransferRegistry.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.7.1;\\npragma experimental \\\"ABIEncoderV2\\\";\\n\\nstruct RegisteredTransfer {\\n    string name;\\n    address definition;\\n    string stateEncoding;\\n    string resolverEncoding;\\n    bytes encodedCancel;\\n}\\n\\ninterface ITransferRegistry {\\n    event TransferAdded(RegisteredTransfer transfer);\\n\\n    event TransferRemoved(RegisteredTransfer transfer);\\n\\n    // Should add a transfer definition to the registry\\n    // onlyOwner\\n    function addTransferDefinition(RegisteredTransfer memory transfer) external;\\n\\n    // Should remove a transfer definition to the registry\\n    // onlyOwner\\n    function removeTransferDefinition(string memory name) external;\\n\\n    // Should return all transfer defintions in registry\\n    function getTransferDefinitions()\\n        external\\n        view\\n        returns (RegisteredTransfer[] memory);\\n}\\n\",\"keccak256\":\"0xd13be6d976c64e381a0d9df10c621cd964454b6916f25df4ea6c1b4cd873a58a\",\"license\":\"UNLICENSED\"},\"src.sol/lib/LibIterableMapping.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.7.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../interfaces/ITransferRegistry.sol\\\";\\n\\n/// @title LibIterableMapping\\n/// @author Connext <support@connext.network>\\n/// @notice This library provides an efficient way to store and retrieve\\n///         RegisteredTransfers. This contract is used to manage the transfers\\n///         stored by `TransferRegistry.sol`\\nlibrary LibIterableMapping {\\n    struct TransferDefinitionWithIndex {\\n        RegisteredTransfer transfer;\\n        uint256 index;\\n    }\\n\\n    struct IterableMapping {\\n        mapping(string => TransferDefinitionWithIndex) transfers;\\n        string[] names;\\n    }\\n\\n    function stringEqual(string memory s, string memory t)\\n        internal\\n        pure\\n        returns (bool)\\n    {\\n        return keccak256(abi.encodePacked(s)) == keccak256(abi.encodePacked(t));\\n    }\\n\\n    function isEmptyString(string memory s) internal pure returns (bool) {\\n        return stringEqual(s, \\\"\\\");\\n    }\\n\\n    function nameExists(IterableMapping storage self, string memory name)\\n        internal\\n        view\\n        returns (bool)\\n    {\\n        return\\n            !isEmptyString(name) &&\\n            self.names.length != 0 &&\\n            stringEqual(self.names[self.transfers[name].index], name);\\n    }\\n\\n    function length(IterableMapping storage self)\\n        internal\\n        view\\n        returns (uint256)\\n    {\\n        return self.names.length;\\n    }\\n\\n    function getTransferDefinitionByName(\\n        IterableMapping storage self,\\n        string memory name\\n    ) internal view returns (RegisteredTransfer memory) {\\n        require(!isEmptyString(name), \\\"LibIterableMapping: EMPTY_NAME\\\");\\n        require(nameExists(self, name), \\\"LibIterableMapping: NAME_NOT_FOUND\\\");\\n        return self.transfers[name].transfer;\\n    }\\n\\n    function getTransferDefinitionByIndex(\\n        IterableMapping storage self,\\n        uint256 index\\n    ) internal view returns (RegisteredTransfer memory) {\\n        require(index < self.names.length, \\\"LibIterableMapping: INVALID_INDEX\\\");\\n        return self.transfers[self.names[index]].transfer;\\n    }\\n\\n    function getTransferDefinitions(IterableMapping storage self)\\n        internal\\n        view\\n        returns (RegisteredTransfer[] memory)\\n    {\\n        uint256 l = self.names.length;\\n        RegisteredTransfer[] memory transfers = new RegisteredTransfer[](l);\\n        for (uint256 i = 0; i < l; i++) {\\n            transfers[i] = self.transfers[self.names[i]].transfer;\\n        }\\n        return transfers;\\n    }\\n\\n    function addTransferDefinition(\\n        IterableMapping storage self,\\n        RegisteredTransfer memory transfer\\n    ) internal {\\n        string memory name = transfer.name;\\n        require(!isEmptyString(name), \\\"LibIterableMapping: EMPTY_NAME\\\");\\n        require(!nameExists(self, name), \\\"LibIterableMapping: NAME_NOT_FOUND\\\");\\n        self.transfers[name] = TransferDefinitionWithIndex({\\n            transfer: transfer,\\n            index: self.names.length\\n        });\\n        self.names.push(name);\\n    }\\n\\n    function removeTransferDefinition(\\n        IterableMapping storage self,\\n        string memory name\\n    ) internal {\\n        require(!isEmptyString(name), \\\"LibIterableMapping: EMPTY_NAME\\\");\\n        require(nameExists(self, name), \\\"LibIterableMapping: NAME_NOT_FOUND\\\");\\n        uint256 index = self.transfers[name].index;\\n        string memory lastName = self.names[self.names.length - 1];\\n        self.transfers[lastName].index = index;\\n        self.names[index] = lastName;\\n        delete self.transfers[name];\\n        self.names.pop();\\n    }\\n}\\n\",\"keccak256\":\"0xa725bd43c4e7330391a8e8bef73227426407f6f9df1c673cadc6d07a1a37dbbf\",\"license\":\"UNLICENSED\"},\"src.sol/testing/TestLibIterableMapping.sol\":{\"content\":\"// SPDX-License-Identifier: UNLICENSED\\npragma solidity ^0.7.1;\\npragma experimental ABIEncoderV2;\\n\\nimport \\\"../interfaces/ITransferRegistry.sol\\\";\\nimport \\\"../lib/LibIterableMapping.sol\\\";\\n\\n/// @title TestLibIterableMapping\\n/// @author Layne Haber <layne@connext.network>\\n/// @notice Used to easily test the internal methods of\\n///         LibIterableMapping.sol by aliasing them to public\\n///         methods.\\ncontract TestLibIterableMapping {\\n    using LibIterableMapping for LibIterableMapping.IterableMapping;\\n\\n    LibIterableMapping.IterableMapping data;\\n\\n    constructor() {}\\n\\n    function stringEqual(string memory s, string memory t)\\n        public\\n        pure\\n        returns (bool)\\n    {\\n        return LibIterableMapping.stringEqual(s, t);\\n    }\\n\\n    function isEmptyString(string memory s) public pure returns (bool) {\\n        return LibIterableMapping.isEmptyString(s);\\n    }\\n\\n    function nameExists(string memory name) public view returns (bool) {\\n        return LibIterableMapping.nameExists(data, name);\\n    }\\n\\n    function length() public view returns (uint256) {\\n        return LibIterableMapping.length(data);\\n    }\\n\\n    function getTransferDefinitionByName(string memory name)\\n        public\\n        view\\n        returns (RegisteredTransfer memory)\\n    {\\n        return LibIterableMapping.getTransferDefinitionByName(data, name);\\n    }\\n\\n    function getTransferDefinitionByIndex(uint256 index)\\n        public\\n        view\\n        returns (RegisteredTransfer memory)\\n    {\\n        return LibIterableMapping.getTransferDefinitionByIndex(data, index);\\n    }\\n\\n    function getTransferDefinitions()\\n        public\\n        view\\n        returns (RegisteredTransfer[] memory)\\n    {\\n        return LibIterableMapping.getTransferDefinitions(data);\\n    }\\n\\n    function addTransferDefinition(RegisteredTransfer memory transfer) public {\\n        return LibIterableMapping.addTransferDefinition(data, transfer);\\n    }\\n\\n    function removeTransferDefinition(string memory name) public {\\n        return LibIterableMapping.removeTransferDefinition(data, name);\\n    }\\n}\\n\",\"keccak256\":\"0xdc394ebee50c00492b9f0e040681ad5e2297c922f68bf4d060d2fa54eedcfb09\",\"license\":\"UNLICENSED\"}},\"version\":1}",
  "bytecode": "0x608060405234801561001057600080fd5b50611363806100206000396000f3fe608060405234801561001057600080fd5b50600436106100935760003560e01c8063a45f379e11610066578063a45f379e146100fe578063c981ccc314610111578063c9ff4d2514610131578063cc637afe14610146578063e61311171461015957610093565b80631f7b6d321461009857806355304c3f146100b6578063961bf9b1146100cb578063a1298368146100de575b600080fd5b6100a061016c565b6040516100ad91906112d1565b60405180910390f35b6100c96100c4366004610f66565b61017d565b005b6100c96100d9366004610eca565b61018b565b6100f16100ec366004610f05565b610196565b6040516100ad91906111f9565b6100f161010c366004610eca565b6101ab565b61012461011f36600461104c565b6101b6565b6040516100ad91906112be565b6101396101c9565b6040516100ad9190611199565b6100f1610154366004610eca565b6101d5565b610124610167366004610eca565b6101e2565b600061017860006101f5565b905090565b6101886000826101fc565b50565b610188600082610357565b60006101a28383610575565b90505b92915050565b60006101a5826105ce565b6101be610d3f565b6101a56000836105e9565b606061017860006108bc565b60006101a5600083610beb565b6101ea610d3f565b6101a5600083610cdb565b6001015490565b8051610207816105ce565b1561022d5760405162461bcd60e51b815260040161022490611204565b60405180910390fd5b6102378382610beb565b156102545760405162461bcd60e51b81526004016102249061127c565b604080518082018252838152600185015460208201529051849061027990849061110d565b908152604051602091819003820190208251805180519293919284926102a3928492910190610d77565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516102e29260028501920190610d77565b50606082015180516102fe916003840191602090910190610d77565b506080820151805161031a916004840191602090910190610d77565b5050506020918201516005909101556001808501805491820181556000908152829020835161035193919092019190840190610d77565b50505050565b610360816105ce565b1561037d5760405162461bcd60e51b815260040161022490611204565b6103878282610beb565b6103a35760405162461bcd60e51b81526004016102249061127c565b600082600001826040516103b7919061110d565b9081526040519081900360200190206005015460018401805491925060609160001981019081106103e457fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156104725780601f1061044757610100808354040283529160200191610472565b820191906000526020600020905b81548152906001019060200180831161045557829003601f168201915b5050505050905081846000018260405161048c919061110d565b908152602001604051809103902060050181905550808460010183815481106104b157fe5b9060005260206000200190805190602001906104ce929190610d77565b5060405184906104df90859061110d565b908152604051908190036020019020600081816104fc8282610df5565b6001820180546001600160a01b031916905561051c600283016000610df5565b61052a600383016000610df5565b610538600483016000610df5565b5050600582016000905550508360010180548061055157fe5b60019003818190600052602060002001600061056d9190610df5565b905550505050565b600081604051602001610588919061110d565b60405160208183030381529060405280519060200120836040516020016105af919061110d565b6040516020818303038152906040528051906020012014905092915050565b60006101a58260405180602001604052806000815250610575565b6105f1610d3f565b600183015482106106145760405162461bcd60e51b81526004016102249061123b565b8260000183600101838154811061062757fe5b9060005260206000200160405161063e9190611129565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160c090810190935260a082018481529193909284929184918401828280156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b50505091835250506001828101546001600160a01b0316602080840191909152600280850180546040805161010096831615969096026000190190911692909204601f810184900484028501840183528085529190940193918301828280156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156108ab5780601f10610880576101008083540402835291602001916108ab565b820191906000526020600020905b81548152906001019060200180831161088e57829003601f168201915b505050505081525050905092915050565b6001810154606090818167ffffffffffffffff811180156108dc57600080fd5b5060405190808252806020026020018201604052801561091657816020015b610903610d3f565b8152602001906001900390816108fb5790505b50905060005b82811015610be3578460000185600101828154811061093757fe5b9060005260206000200160405161094e9190611129565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160c090810190935260a082018481529193909284929184918401828280156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b50505091835250506001828101546001600160a01b0316602080840191909152600280850180546040805161010096831615969096026000190190911692909204601f81018490048402850184018352808552919094019391830182828015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610b275780601f10610afc57610100808354040283529160200191610b27565b820191906000526020600020905b815481529060010190602001808311610b0a57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610bbb5780601f10610b9057610100808354040283529160200191610bbb565b820191906000526020600020905b815481529060010190602001808311610b9e57829003601f168201915b505050505081525050828281518110610bd057fe5b602090810291909101015260010161091c565b509392505050565b6000610bf6826105ce565b158015610c065750600183015415155b80156101a257506101a2836001018460000184604051610c26919061110d565b90815260200160405180910390206005015481548110610c4257fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050505083610575565b610ce3610d3f565b610cec826105ce565b15610d095760405162461bcd60e51b815260040161022490611204565b610d138383610beb565b610d2f5760405162461bcd60e51b81526004016102249061127c565b604051839061063e90849061110d565b6040518060a001604052806060815260200160006001600160a01b031681526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610db857805160ff1916838001178555610de5565b82800160010185558215610de5579182015b82811115610de5578251825591602001919060010190610dca565b50610df1929150610e35565b5090565b50805460018160011615610100020316600290046000825580601f10610e1b5750610188565b601f01602090049060005260206000209081019061018891905b5b80821115610df15760008155600101610e36565b80356001600160a01b03811681146101a557600080fd5b600082601f830112610e71578081fd5b813567ffffffffffffffff811115610e87578182fd5b610e9a601f8201601f19166020016112da565b9150808252836020828501011115610eb157600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215610edb578081fd5b813567ffffffffffffffff811115610ef1578182fd5b610efd84828501610e61565b949350505050565b60008060408385031215610f17578081fd5b823567ffffffffffffffff80821115610f2e578283fd5b610f3a86838701610e61565b93506020850135915080821115610f4f578283fd5b50610f5c85828601610e61565b9150509250929050565b600060208284031215610f77578081fd5b813567ffffffffffffffff80821115610f8e578283fd5b9083019060a08286031215610fa1578283fd5b610fab60a06112da565b823582811115610fb9578485fd5b610fc587828601610e61565b825250610fd58660208501610e4a565b6020820152604083013582811115610feb578485fd5b610ff787828601610e61565b60408301525060608301358281111561100e578485fd5b61101a87828601610e61565b606083015250608083013582811115611031578485fd5b61103d87828601610e61565b60808301525095945050505050565b60006020828403121561105d578081fd5b5035919050565b6000815180845261107c816020860160208601611301565b601f01601f19169290920160200192915050565b6000815160a084526110a560a0850182611064565b905060018060a01b036020840151166020850152604083015184820360408601526110d08282611064565b915050606083015184820360608601526110ea8282611064565b915050608083015184820360808601526111048282611064565b95945050505050565b6000825161111f818460208701611301565b9190910192915050565b6000808354600180821660008114611148576001811461115f5761118e565b60ff198316865260028304607f168601935061118e565b600283048786526020808720875b838110156111865781548a82015290850190820161116d565b505050860193505b509195945050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156111ec57603f198886030184526111da858351611090565b945092850192908501906001016111be565b5092979650505050505050565b901515815260200190565b6020808252601e908201527f4c69624974657261626c654d617070696e673a20454d5054595f4e414d450000604082015260600190565b60208082526021908201527f4c69624974657261626c654d617070696e673a20494e56414c49445f494e44456040820152600b60fb1b606082015260800190565b60208082526022908201527f4c69624974657261626c654d617070696e673a204e414d455f4e4f545f464f55604082015261139160f21b606082015260800190565b6000602082526101a26020830184611090565b90815260200190565b60405181810167ffffffffffffffff811182821017156112f957600080fd5b604052919050565b60005b8381101561131c578181015183820152602001611304565b83811115610351575050600091015256fea264697066735822122091fcb87aa45e74afcf52feddc9c35e9b331512d047b08a40ae992ec1b7926ae064736f6c63430007010033",
  "deployedBytecode": "0x608060405234801561001057600080fd5b50600436106100935760003560e01c8063a45f379e11610066578063a45f379e146100fe578063c981ccc314610111578063c9ff4d2514610131578063cc637afe14610146578063e61311171461015957610093565b80631f7b6d321461009857806355304c3f146100b6578063961bf9b1146100cb578063a1298368146100de575b600080fd5b6100a061016c565b6040516100ad91906112d1565b60405180910390f35b6100c96100c4366004610f66565b61017d565b005b6100c96100d9366004610eca565b61018b565b6100f16100ec366004610f05565b610196565b6040516100ad91906111f9565b6100f161010c366004610eca565b6101ab565b61012461011f36600461104c565b6101b6565b6040516100ad91906112be565b6101396101c9565b6040516100ad9190611199565b6100f1610154366004610eca565b6101d5565b610124610167366004610eca565b6101e2565b600061017860006101f5565b905090565b6101886000826101fc565b50565b610188600082610357565b60006101a28383610575565b90505b92915050565b60006101a5826105ce565b6101be610d3f565b6101a56000836105e9565b606061017860006108bc565b60006101a5600083610beb565b6101ea610d3f565b6101a5600083610cdb565b6001015490565b8051610207816105ce565b1561022d5760405162461bcd60e51b815260040161022490611204565b60405180910390fd5b6102378382610beb565b156102545760405162461bcd60e51b81526004016102249061127c565b604080518082018252838152600185015460208201529051849061027990849061110d565b908152604051602091819003820190208251805180519293919284926102a3928492910190610d77565b506020828101516001830180546001600160a01b0319166001600160a01b03909216919091179055604083015180516102e29260028501920190610d77565b50606082015180516102fe916003840191602090910190610d77565b506080820151805161031a916004840191602090910190610d77565b5050506020918201516005909101556001808501805491820181556000908152829020835161035193919092019190840190610d77565b50505050565b610360816105ce565b1561037d5760405162461bcd60e51b815260040161022490611204565b6103878282610beb565b6103a35760405162461bcd60e51b81526004016102249061127c565b600082600001826040516103b7919061110d565b9081526040519081900360200190206005015460018401805491925060609160001981019081106103e457fe5b600091825260209182902001805460408051601f60026000196101006001871615020190941693909304928301859004850281018501909152818152928301828280156104725780601f1061044757610100808354040283529160200191610472565b820191906000526020600020905b81548152906001019060200180831161045557829003601f168201915b5050505050905081846000018260405161048c919061110d565b908152602001604051809103902060050181905550808460010183815481106104b157fe5b9060005260206000200190805190602001906104ce929190610d77565b5060405184906104df90859061110d565b908152604051908190036020019020600081816104fc8282610df5565b6001820180546001600160a01b031916905561051c600283016000610df5565b61052a600383016000610df5565b610538600483016000610df5565b5050600582016000905550508360010180548061055157fe5b60019003818190600052602060002001600061056d9190610df5565b905550505050565b600081604051602001610588919061110d565b60405160208183030381529060405280519060200120836040516020016105af919061110d565b6040516020818303038152906040528051906020012014905092915050565b60006101a58260405180602001604052806000815250610575565b6105f1610d3f565b600183015482106106145760405162461bcd60e51b81526004016102249061123b565b8260000183600101838154811061062757fe5b9060005260206000200160405161063e9190611129565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160c090810190935260a082018481529193909284929184918401828280156106d95780601f106106ae576101008083540402835291602001916106d9565b820191906000526020600020905b8154815290600101906020018083116106bc57829003601f168201915b50505091835250506001828101546001600160a01b0316602080840191909152600280850180546040805161010096831615969096026000190190911692909204601f810184900484028501840183528085529190940193918301828280156107835780601f1061075857610100808354040283529160200191610783565b820191906000526020600020905b81548152906001019060200180831161076657829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156108175780601f106107ec57610100808354040283529160200191610817565b820191906000526020600020905b8154815290600101906020018083116107fa57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f81018490048402820184019092528181529382019392918301828280156108ab5780601f10610880576101008083540402835291602001916108ab565b820191906000526020600020905b81548152906001019060200180831161088e57829003601f168201915b505050505081525050905092915050565b6001810154606090818167ffffffffffffffff811180156108dc57600080fd5b5060405190808252806020026020018201604052801561091657816020015b610903610d3f565b8152602001906001900390816108fb5790505b50905060005b82811015610be3578460000185600101828154811061093757fe5b9060005260206000200160405161094e9190611129565b9081526040805160209281900383018120805460026001821615610100026000190190911604601f8101859004909402820160c090810190935260a082018481529193909284929184918401828280156109e95780601f106109be576101008083540402835291602001916109e9565b820191906000526020600020905b8154815290600101906020018083116109cc57829003601f168201915b50505091835250506001828101546001600160a01b0316602080840191909152600280850180546040805161010096831615969096026000190190911692909204601f81018490048402850184018352808552919094019391830182828015610a935780601f10610a6857610100808354040283529160200191610a93565b820191906000526020600020905b815481529060010190602001808311610a7657829003601f168201915b505050918352505060038201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610b275780601f10610afc57610100808354040283529160200191610b27565b820191906000526020600020905b815481529060010190602001808311610b0a57829003601f168201915b505050918352505060048201805460408051602060026001851615610100026000190190941693909304601f8101849004840282018401909252818152938201939291830182828015610bbb5780601f10610b9057610100808354040283529160200191610bbb565b820191906000526020600020905b815481529060010190602001808311610b9e57829003601f168201915b505050505081525050828281518110610bd057fe5b602090810291909101015260010161091c565b509392505050565b6000610bf6826105ce565b158015610c065750600183015415155b80156101a257506101a2836001018460000184604051610c26919061110d565b90815260200160405180910390206005015481548110610c4257fe5b600091825260209182902001805460408051601f6002600019610100600187161502019094169390930492830185900485028101850190915281815292830182828015610cd05780601f10610ca557610100808354040283529160200191610cd0565b820191906000526020600020905b815481529060010190602001808311610cb357829003601f168201915b505050505083610575565b610ce3610d3f565b610cec826105ce565b15610d095760405162461bcd60e51b815260040161022490611204565b610d138383610beb565b610d2f5760405162461bcd60e51b81526004016102249061127c565b604051839061063e90849061110d565b6040518060a001604052806060815260200160006001600160a01b031681526020016060815260200160608152602001606081525090565b828054600181600116156101000203166002900490600052602060002090601f016020900481019282601f10610db857805160ff1916838001178555610de5565b82800160010185558215610de5579182015b82811115610de5578251825591602001919060010190610dca565b50610df1929150610e35565b5090565b50805460018160011615610100020316600290046000825580601f10610e1b5750610188565b601f01602090049060005260206000209081019061018891905b5b80821115610df15760008155600101610e36565b80356001600160a01b03811681146101a557600080fd5b600082601f830112610e71578081fd5b813567ffffffffffffffff811115610e87578182fd5b610e9a601f8201601f19166020016112da565b9150808252836020828501011115610eb157600080fd5b8060208401602084013760009082016020015292915050565b600060208284031215610edb578081fd5b813567ffffffffffffffff811115610ef1578182fd5b610efd84828501610e61565b949350505050565b60008060408385031215610f17578081fd5b823567ffffffffffffffff80821115610f2e578283fd5b610f3a86838701610e61565b93506020850135915080821115610f4f578283fd5b50610f5c85828601610e61565b9150509250929050565b600060208284031215610f77578081fd5b813567ffffffffffffffff80821115610f8e578283fd5b9083019060a08286031215610fa1578283fd5b610fab60a06112da565b823582811115610fb9578485fd5b610fc587828601610e61565b825250610fd58660208501610e4a565b6020820152604083013582811115610feb578485fd5b610ff787828601610e61565b60408301525060608301358281111561100e578485fd5b61101a87828601610e61565b606083015250608083013582811115611031578485fd5b61103d87828601610e61565b60808301525095945050505050565b60006020828403121561105d578081fd5b5035919050565b6000815180845261107c816020860160208601611301565b601f01601f19169290920160200192915050565b6000815160a084526110a560a0850182611064565b905060018060a01b036020840151166020850152604083015184820360408601526110d08282611064565b915050606083015184820360608601526110ea8282611064565b915050608083015184820360808601526111048282611064565b95945050505050565b6000825161111f818460208701611301565b9190910192915050565b6000808354600180821660008114611148576001811461115f5761118e565b60ff198316865260028304607f168601935061118e565b600283048786526020808720875b838110156111865781548a82015290850190820161116d565b505050860193505b509195945050505050565b6000602080830181845280855180835260408601915060408482028701019250838701855b828110156111ec57603f198886030184526111da858351611090565b945092850192908501906001016111be565b5092979650505050505050565b901515815260200190565b6020808252601e908201527f4c69624974657261626c654d617070696e673a20454d5054595f4e414d450000604082015260600190565b60208082526021908201527f4c69624974657261626c654d617070696e673a20494e56414c49445f494e44456040820152600b60fb1b606082015260800190565b60208082526022908201527f4c69624974657261626c654d617070696e673a204e414d455f4e4f545f464f55604082015261139160f21b606082015260800190565b6000602082526101a26020830184611090565b90815260200190565b60405181810167ffffffffffffffff811182821017156112f957600080fd5b604052919050565b60005b8381101561131c578181015183820152602001611304565b83811115610351575050600091015256fea264697066735822122091fcb87aa45e74afcf52feddc9c35e9b331512d047b08a40ae992ec1b7926ae064736f6c63430007010033",
  "devdoc": {
    "author": "Layne Haber <layne@connext.network>",
    "kind": "dev",
    "methods": {},
    "title": "TestLibIterableMapping",
    "version": 1
  },
  "userdoc": {
    "kind": "user",
    "methods": {},
    "notice": "Used to easily test the internal methods of         LibIterableMapping.sol by aliasing them to public         methods.",
    "version": 1
  },
  "storageLayout": {
    "storage": [
      {
        "astId": 5652,
        "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
        "label": "data",
        "offset": 0,
        "slot": "0",
        "type": "t_struct(IterableMapping)4393_storage"
      }
    ],
    "types": {
      "t_address": {
        "encoding": "inplace",
        "label": "address",
        "numberOfBytes": "20"
      },
      "t_array(t_string_storage)dyn_storage": {
        "base": "t_string_storage",
        "encoding": "dynamic_array",
        "label": "string[]",
        "numberOfBytes": "32"
      },
      "t_bytes_storage": {
        "encoding": "bytes",
        "label": "bytes",
        "numberOfBytes": "32"
      },
      "t_mapping(t_string_memory_ptr,t_struct(TransferDefinitionWithIndex)4385_storage)": {
        "encoding": "mapping",
        "key": "t_string_memory_ptr",
        "label": "mapping(string => struct LibIterableMapping.TransferDefinitionWithIndex)",
        "numberOfBytes": "32",
        "value": "t_struct(TransferDefinitionWithIndex)4385_storage"
      },
      "t_string_memory_ptr": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_string_storage": {
        "encoding": "bytes",
        "label": "string",
        "numberOfBytes": "32"
      },
      "t_struct(IterableMapping)4393_storage": {
        "encoding": "inplace",
        "label": "struct LibIterableMapping.IterableMapping",
        "members": [
          {
            "astId": 4389,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "transfers",
            "offset": 0,
            "slot": "0",
            "type": "t_mapping(t_string_memory_ptr,t_struct(TransferDefinitionWithIndex)4385_storage)"
          },
          {
            "astId": 4392,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "names",
            "offset": 0,
            "slot": "1",
            "type": "t_array(t_string_storage)dyn_storage"
          }
        ],
        "numberOfBytes": "64"
      },
      "t_struct(RegisteredTransfer)3936_storage": {
        "encoding": "inplace",
        "label": "struct RegisteredTransfer",
        "members": [
          {
            "astId": 3927,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "name",
            "offset": 0,
            "slot": "0",
            "type": "t_string_storage"
          },
          {
            "astId": 3929,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "definition",
            "offset": 0,
            "slot": "1",
            "type": "t_address"
          },
          {
            "astId": 3931,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "stateEncoding",
            "offset": 0,
            "slot": "2",
            "type": "t_string_storage"
          },
          {
            "astId": 3933,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "resolverEncoding",
            "offset": 0,
            "slot": "3",
            "type": "t_string_storage"
          },
          {
            "astId": 3935,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "encodedCancel",
            "offset": 0,
            "slot": "4",
            "type": "t_bytes_storage"
          }
        ],
        "numberOfBytes": "160"
      },
      "t_struct(TransferDefinitionWithIndex)4385_storage": {
        "encoding": "inplace",
        "label": "struct LibIterableMapping.TransferDefinitionWithIndex",
        "members": [
          {
            "astId": 4382,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "transfer",
            "offset": 0,
            "slot": "0",
            "type": "t_struct(RegisteredTransfer)3936_storage"
          },
          {
            "astId": 4384,
            "contract": "src.sol/testing/TestLibIterableMapping.sol:TestLibIterableMapping",
            "label": "index",
            "offset": 0,
            "slot": "5",
            "type": "t_uint256"
          }
        ],
        "numberOfBytes": "192"
      },
      "t_uint256": {
        "encoding": "inplace",
        "label": "uint256",
        "numberOfBytes": "32"
      }
    }
  }
}